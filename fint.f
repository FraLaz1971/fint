
C=======================================================

      PROGRAM FINTERN
        IMPLICIT NONE
        INTEGER MAXREC
        PARAMETER (MAXREC = 5)
C     OUR IN-MEMORY "FILE": 80 CHARS PER RECORD
        CHARACTER*80 MEM(MAXREC)
C     LOCAL VARIABLES FOR LOADING
        INTEGER ID, AGE
        REAL SCORE
        CHARACTER*20 NAME
        CHARACTER*10 STATUS
        INTEGER FOUND
C         C     INITIALIZE MEMORY TO BLANKS
        CALL INIT_MEM(MEM, MAXREC)
C
C      ADD RECORDS
      CALL STORE_REC(MEM, MAXREC, 1, 101, 'ALPHA', 25, 88.5, 'ACTIVE')
      CALL STORE_REC(MEM, MAXREC, 2, 102, 'BETA',  31, 72.0, 'INACTIVE')
      CALL STORE_REC(MEM, MAXREC, 3, 103, 'GAMMA', 27, 99.2, 'ACTIVE')

C      PRINT DATABASE CONTENTS
      PRINT *, '--- DATABASE CONTENTS ---'
      CALL PRINT_MEM(MEM, MAXREC)

C      SEARCH FOR RECORD BY ID
       CALL FIND_BY_ID(MEM, MAXREC, 102, FOUND)
      IF (FOUND .GT. 0) THEN
          CALL LOAD_REC(MEM, FOUND, ID, NAME, AGE, SCORE, STATUS)
          PRINT *, '--- RECORD FOUND ---'
          PRINT *, 'ID    = ', ID
          PRINT *, 'NAME  = ', NAME
          PRINT *, 'AGE   = ', AGE
          PRINT *, 'SCORE = ', SCORE
          PRINT *, 'STATUS= ', STATUS
      ELSE
          PRINT *, 'RECORD NOT FOUND.'
      ENDIF

C     UPDATE RECORD BY ID
       CALL FIND_BY_ID(MEM, MAXREC, 103, FOUND)
       IF (FOUND .GT. 0) THEN
           CALL STORE_REC(MEM, MAXREC, FOUND, 103, 'GAMMA', 28,
     +      100.0, 'ACTIVE')
       ENDIF

C     PRINT AFTER UPDATE
      PRINT *, '--- DATABASE AFTER UPDATE ---'
       CALL PRINT_MEM(MEM, MAXREC)
       STOP
      END
